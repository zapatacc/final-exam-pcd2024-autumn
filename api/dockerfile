# Usar una imagen base ligera de Python
FROM python:3.9-slim

# Establecer el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copiar el archivo de dependencias
COPY requirements.txt requirements.txt

# Instalar las dependencias
RUN pip install --no-cache-dir -r requirements.txt

# Descargar recursos necesarios de NLTK
RUN python -m nltk.downloader stopwords wordnet omw-1.4

# Copiar el resto del código de la API al contenedor
COPY . .

# Copiar la carpeta models
COPY models /app/models

# Exponer el puerto para la API
EXPOSE 8000

# Comando para ejecutar la API
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]


# 0.0.0.0 asegura que la aplicación esté disponible a través del puerto mapeado en el docker-compose.yml.
# Ejemplo: En mi configuración, el backend (API) usa 0.0.0.0:8000. Esto asegura que el servicio esté
# accesible tanto desde el frontend (contenedor Streamlit) como desde tu navegador en http://localhost:8000.


# puerto 8000 porque es comúnmente usado por fastapi. funciona
# puerto 8051 porque es comúnmente usado por streamlit. funciona
